Index: src/main/java/org/generation/italy/esempiCorso/inheritance/school/Employee.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package org.generation.italy.esempiCorso.inheritance.school;\r\n\r\npublic abstract class Employee extends Person {\r\n\r\n    protected int monthlySalary, nMonth;\r\n\r\n    public Employee(String name, String surname, int age, int monthlySalary, int nMonth) {\r\n        super(name, surname, age);\r\n        this.monthlySalary = monthlySalary;\r\n        this.nMonth = nMonth;\r\n    }\r\n\r\n    public abstract int getAnnualSalary();\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/org/generation/italy/esempiCorso/inheritance/school/Employee.java b/src/main/java/org/generation/italy/esempiCorso/inheritance/school/Employee.java
--- a/src/main/java/org/generation/italy/esempiCorso/inheritance/school/Employee.java	(revision 8ab245cb121e2c4610d679b4b2d639fe82584e56)
+++ b/src/main/java/org/generation/italy/esempiCorso/inheritance/school/Employee.java	(date 1728575095139)
@@ -9,7 +9,7 @@
         this.monthlySalary = monthlySalary;
         this.nMonth = nMonth;
     }
-
+    public abstract void doWork(int h);
     public abstract int getAnnualSalary();
 
 }
Index: src/main/java/org/generation/italy/esempiCorso/inheritance/school/Personnel.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package org.generation.italy.esempiCorso.inheritance.school;\r\n\r\npublic class Personnel extends Employee {\r\n\r\n    private String role;\r\n    private int bonus = 0;\r\n\r\n    public Personnel(String name, String surname, int age, int monthlySalary, int nMonth, int bonus, String role) {\r\n        super(name, surname, age, monthlySalary, nMonth);\r\n        this.bonus = bonus;\r\n        this.role = role;\r\n    }\r\n\r\n    @Override\r\n    public int getAnnualSalary(){\r\n        return monthlySalary*nMonth+bonus;\r\n    }\r\n\r\n    @Override\r\n    public String toString(){\r\n        return super.toString()+\"\\nRuolo: \"+role+\" \\nStipendio: $\"+getAnnualSalary();\r\n    }\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/org/generation/italy/esempiCorso/inheritance/school/Personnel.java b/src/main/java/org/generation/italy/esempiCorso/inheritance/school/Personnel.java
--- a/src/main/java/org/generation/italy/esempiCorso/inheritance/school/Personnel.java	(revision 8ab245cb121e2c4610d679b4b2d639fe82584e56)
+++ b/src/main/java/org/generation/italy/esempiCorso/inheritance/school/Personnel.java	(date 1728575095140)
@@ -1,6 +1,6 @@
 package org.generation.italy.esempiCorso.inheritance.school;
 
-public class Personnel extends Employee {
+public class  Personnel extends Employee {
 
     private String role;
     private int bonus = 0;
@@ -11,6 +11,12 @@
         this.role = role;
     }
 
+
+    @Override
+    public void doWork(int h) {
+
+    }
+
     @Override
     public int getAnnualSalary(){
         return monthlySalary*nMonth+bonus;
Index: src/main/java/org/generation/italy/esempiCorso/inheritance/school/Person.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package org.generation.italy.esempiCorso.inheritance.school;\r\n\r\npublic abstract class Person {\r\n\r\n    protected String name, surname;\r\n    protected int age;\r\n\r\n    public Person(String name, String surname, int age){\r\n        this.name = name;\r\n        this.surname = surname;\r\n        this.age = age;\r\n    }\r\n\r\n    @Override\r\n    public String toString(){\r\n        return String.format(\"Ciao sono %s %s e ho %d anni.\",name,surname,age);\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/org/generation/italy/esempiCorso/inheritance/school/Person.java b/src/main/java/org/generation/italy/esempiCorso/inheritance/school/Person.java
--- a/src/main/java/org/generation/italy/esempiCorso/inheritance/school/Person.java	(revision 8ab245cb121e2c4610d679b4b2d639fe82584e56)
+++ b/src/main/java/org/generation/italy/esempiCorso/inheritance/school/Person.java	(date 1728575095139)
@@ -1,6 +1,6 @@
 package org.generation.italy.esempiCorso.inheritance.school;
 
-public abstract class Person {
+public abstract class Person { //con abstract rendo impossibile creare oggetti di tipo Person, che avrà utilità solo per stabilire una gerarchia.
 
     protected String name, surname;
     protected int age;
@@ -13,6 +13,6 @@
 
     @Override
     public String toString(){
-        return String.format("Ciao sono %s %s e ho %d anni.",name,surname,age);
+        return String.format("Ciao sono %s %s e ho %d anni.", name,surname,age);
     }
 }
Index: src/main/java/org/generation/italy/esempiCorso/inheritance/school/Teacher.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package org.generation.italy.esempiCorso.inheritance.school;\r\n\r\npublic class Teacher extends Employee{\r\n\r\n    private String subject;\r\n    private int yearOfService;\r\n\r\n    public Teacher(String name, String surname, int age, String subject, int yearOfService, int monthltySalary, int nMonth){\r\n        super(name,surname,age,monthltySalary,nMonth);\r\n        this.subject = subject;\r\n        this.yearOfService = yearOfService;\r\n    }\r\n\r\n    @Override\r\n    public int getAnnualSalary(){\r\n       return yearOfService>10 ? monthlySalary*nMonth+500 : monthlySalary*nMonth;\r\n    }\r\n\r\n    @Override //riprende il metodo della superclasse e lo sovrascrive\r\n    public String toString(){\r\n        return super.toString()+ \"\\nInsegno \"+subject+\" da \"+yearOfService+\" anni\"+\" \\nStipendio: $\"+getAnnualSalary();\r\n    }\r\n\r\n}\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/org/generation/italy/esempiCorso/inheritance/school/Teacher.java b/src/main/java/org/generation/italy/esempiCorso/inheritance/school/Teacher.java
--- a/src/main/java/org/generation/italy/esempiCorso/inheritance/school/Teacher.java	(revision 8ab245cb121e2c4610d679b4b2d639fe82584e56)
+++ b/src/main/java/org/generation/italy/esempiCorso/inheritance/school/Teacher.java	(date 1728575095140)
@@ -11,6 +11,12 @@
         this.yearOfService = yearOfService;
     }
 
+
+    @Override
+    public void doWork(int h) {
+
+    }
+
     @Override
     public int getAnnualSalary(){
        return yearOfService>10 ? monthlySalary*nMonth+500 : monthlySalary*nMonth;
Index: src/main/java/org/generation/italy/esempiCorso/inheritance/geometria/Forma.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package org.generation.italy.esempiCorso.inheritance.geometria;\r\n\r\npublic class Forma {\r\n    protected int base, altezza;\r\n\r\n    public Forma(int base, int altezza) {\r\n        this.base = base;\r\n        this.altezza = altezza;\r\n    }\r\n\r\n    public int calcolaArea(){\r\n        return 0;\r\n    }\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/org/generation/italy/esempiCorso/inheritance/geometria/Forma.java b/src/main/java/org/generation/italy/esempiCorso/inheritance/geometria/Forma.java
--- a/src/main/java/org/generation/italy/esempiCorso/inheritance/geometria/Forma.java	(revision 8ab245cb121e2c4610d679b4b2d639fe82584e56)
+++ b/src/main/java/org/generation/italy/esempiCorso/inheritance/geometria/Forma.java	(date 1728575095139)
@@ -1,6 +1,6 @@
 package org.generation.italy.esempiCorso.inheritance.geometria;
 
-public class Forma {
+public abstract class Forma {
     protected int base, altezza;
 
     public Forma(int base, int altezza) {
